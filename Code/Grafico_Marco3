#include <WiFi.h>
#include <WiFiServer.h>

// Replace with your network credentials
const char* ssid = "xiaomiFelipe";
const char* password = "123456789";

// Create a WiFi server on port 80 (HTTP)
WiFiServer server(80);

void setup() {
  // Start the serial monitor
  Serial.begin(115200);
  
  // Connect to Wi-Fi
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("Connected to WiFi!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());  // Print the IP address

  // Start the server
  server.begin();
}

void loop() {
  // Check if a client has connected
  WiFiClient client = server.available();
  
  if (client) {
    Serial.println("New Client Connected");
    String request = "";
    
    // Read the request from the client
    while (client.available()) {
      char c = client.read();
      request += c;
    }
    
    Serial.println(request);  // For debugging, print the request
    
    // Serve the HTML page
    String html = R"rawliteral(
      <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>B.E.M.</title>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <style>
            body {
                font-family: Arial, sans-serif;
            }
            canvas {
                max-width: 100%;
                margin: 20px auto;
                display: block;
            }
        </style>
    </head>
    <body>

        <h1 style="text-align: center;">Grafico 12 Horas</h1>
        <canvas id="wattageChart" width="800" height="400"></canvas>

        <script>
            // Example data for wattage consumption (float array values for each outlet)
            const tomada1 = [45.5, 50.2, 48.8, 52.1, 49.7, 46.3, 47.5, 89.1, 91.2, 73.4, 85.3, 56.1]; 
            const tomada2 = [60.1, 63.4, 61.2, 62.9, 60.5, 59.8, 61.0, 62.3, 64.1, 65.2, 55.3, 43.0];
            const tomada3 = [30.3, 33.5, 32.1, 34.2, 31.9, 30.7, 32.5, 33.9, 35.2, 36.1, 37.0, 38.0];
            const tomada4 = [15.8, 17.2, 16.6, 180.1, 170.5, 16.9, 17.8, 18.4, 19.1, 19.6, 20.0, 20.4];

            // Time labels for the x-axis (now 12-hourly intervals)
            const labels = ['12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'];

            // Get the canvas element
            const ctx = document.getElementById('wattageChart').getContext('2d');

            // Create the chart
            const wattageChart = new Chart(ctx, {
                type: 'line', // Line chart type
                data: {
                    labels: labels, // Time labels
                    datasets: [{
                        label: 'Tomada 1',
                        data: tomada1, // Data for outlet 1
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        fill: true,
                        tension: 0.4
                    }, {
                        label: 'Tomada 2',
                        data: tomada2, // Data for outlet 2
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        fill: true,
                        tension: 0.4
                    }, {
                        label: 'Tomada 3',
                        data: tomada3, // Data for outlet 3
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        fill: true,
                        tension: 0.4
                    }, {
                        label: 'Tomada 4',
                        data: tomada4, // Data for outlet 4
                        borderColor: 'rgba(153, 102, 255, 1)',
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Hora'
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Potencia (W)'
                            },
                            min: 0, // Minimum value for the y-axis
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                    }
                }
            });
        </script>

    </body>
    </html>
    )rawliteral";

    // Send HTTP header
    client.println("HTTP/1.1 200 OK");
    client.println("Content-Type: text/html");
    client.println("Connection: close");
    client.println();

    // Send the HTML content
    client.print(html);
    
    // Wait for the client to disconnect
    delay(1);
    client.stop();
    Serial.println("Client Disconnected");
  }
}
